/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package net.praqma.prqa.reports;

import net.praqma.prga.excetions.PrqaException;
import net.praqma.prqa.parsers.ComplianceReportHtmlParser;
import net.praqma.prqa.products.QAR;
import net.praqma.prqa.status.PRQAComplianceStatus;

/**
 *
 * @author Praqma
 */
public class PRQAComplianceReport extends PRQAReport<PRQAComplianceStatus> {    
    /**
     * A compliance report. Takes a command line wrapper for Programming Research QAR tool. Each report must implement their own parser.
     * 
     * @param qar 
     */
    public PRQAComplianceReport() {
        this.parser = new ComplianceReportHtmlParser();
    }
    
    public PRQAComplianceReport(QAR qar) {
    	super(qar);
        logger.finest(String.format("Constructor and super constructor called for class PRQAComplianceReport"));
        
        this.parser = new ComplianceReportHtmlParser();
        
        logger.finest(String.format("Ending execution of constructor - PRQAComplianceReport"));
    }
   
    /**
     * Completes the job of creating usable data given a path to a report generated by QAR. This is the Compliance report
     * @param reportpath
     * @return 
     */
    
    @Override
    public PRQAComplianceStatus generateReport() throws PrqaException {
    	logger.finest(String.format("Starting execution of method - generateReport"));
    	
        executeQAR();
        
        PRQAComplianceStatus status = new PRQAComplianceStatus();
        status.setMessages(Integer.parseInt(parser.getResult(ComplianceReportHtmlParser.totalMessagesPattern)));
        status.setProjectCompliance(Double.parseDouble(parser.getResult(ComplianceReportHtmlParser.projectCompliancePattern)));
        status.setFileCompliance(Double.parseDouble(parser.getResult(ComplianceReportHtmlParser.fileCompliancePattern)));
        
        logger.finest(String.format("Returning value: %s", status));
        
        return status;
    }
    
    @Override
    public String getDisplayName() {
        return "Compliance";
    }
}
